; SMT-LIBv2 description generated by Yosys 0.39 (git sha1 00338082b, g++ 13.2.1 -march=x86-64 -mtune=generic -O2 -fno-plt -fexceptions -fstack-clash-protection -fcf-protection -ffile-prefix-map=/build/yosys/src=/usr/src/debug/yosys -fPIC -Os)
; yosys-smt2-module encoder_6bit
(declare-sort |encoder_6bit_s| 0)
(declare-fun |encoder_6bit_is| (|encoder_6bit_s|) Bool)
(declare-fun |encoder_6bit#0| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [63]
(define-fun |encoder_6bit#1| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#0| state)) #b1) #b111111 #b000000)) ; $procmux$79_Y
(declare-fun |encoder_6bit#2| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [62]
(define-fun |encoder_6bit#3| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#2| state)) #b1) #b111110 (|encoder_6bit#1| state))) ; $procmux$81_Y
(declare-fun |encoder_6bit#4| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [61]
(define-fun |encoder_6bit#5| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#4| state)) #b1) #b111101 (|encoder_6bit#3| state))) ; $procmux$83_Y
(declare-fun |encoder_6bit#6| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [60]
(define-fun |encoder_6bit#7| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#6| state)) #b1) #b111100 (|encoder_6bit#5| state))) ; $procmux$85_Y
(declare-fun |encoder_6bit#8| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [59]
(define-fun |encoder_6bit#9| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#8| state)) #b1) #b111011 (|encoder_6bit#7| state))) ; $procmux$87_Y
(declare-fun |encoder_6bit#10| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [58]
(define-fun |encoder_6bit#11| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#10| state)) #b1) #b111010 (|encoder_6bit#9| state))) ; $procmux$89_Y
(declare-fun |encoder_6bit#12| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [57]
(define-fun |encoder_6bit#13| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#12| state)) #b1) #b111001 (|encoder_6bit#11| state))) ; $procmux$91_Y
(declare-fun |encoder_6bit#14| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [56]
(define-fun |encoder_6bit#15| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#14| state)) #b1) #b111000 (|encoder_6bit#13| state))) ; $procmux$93_Y
(declare-fun |encoder_6bit#16| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [55]
(define-fun |encoder_6bit#17| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#16| state)) #b1) #b110111 (|encoder_6bit#15| state))) ; $procmux$95_Y
(declare-fun |encoder_6bit#18| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [54]
(define-fun |encoder_6bit#19| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#18| state)) #b1) #b110110 (|encoder_6bit#17| state))) ; $procmux$97_Y
(declare-fun |encoder_6bit#20| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [53]
(define-fun |encoder_6bit#21| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#20| state)) #b1) #b110101 (|encoder_6bit#19| state))) ; $procmux$99_Y
(declare-fun |encoder_6bit#22| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [52]
(define-fun |encoder_6bit#23| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#22| state)) #b1) #b110100 (|encoder_6bit#21| state))) ; $procmux$101_Y
(declare-fun |encoder_6bit#24| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [51]
(define-fun |encoder_6bit#25| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#24| state)) #b1) #b110011 (|encoder_6bit#23| state))) ; $procmux$103_Y
(declare-fun |encoder_6bit#26| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [50]
(define-fun |encoder_6bit#27| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#26| state)) #b1) #b110010 (|encoder_6bit#25| state))) ; $procmux$105_Y
(declare-fun |encoder_6bit#28| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [49]
(define-fun |encoder_6bit#29| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#28| state)) #b1) #b110001 (|encoder_6bit#27| state))) ; $procmux$107_Y
(declare-fun |encoder_6bit#30| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [48]
(define-fun |encoder_6bit#31| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#30| state)) #b1) #b110000 (|encoder_6bit#29| state))) ; $procmux$109_Y
(declare-fun |encoder_6bit#32| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [47]
(define-fun |encoder_6bit#33| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#32| state)) #b1) #b101111 (|encoder_6bit#31| state))) ; $procmux$111_Y
(declare-fun |encoder_6bit#34| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [46]
(define-fun |encoder_6bit#35| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#34| state)) #b1) #b101110 (|encoder_6bit#33| state))) ; $procmux$113_Y
(declare-fun |encoder_6bit#36| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [45]
(define-fun |encoder_6bit#37| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#36| state)) #b1) #b101101 (|encoder_6bit#35| state))) ; $procmux$115_Y
(declare-fun |encoder_6bit#38| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [44]
(define-fun |encoder_6bit#39| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#38| state)) #b1) #b101100 (|encoder_6bit#37| state))) ; $procmux$117_Y
(declare-fun |encoder_6bit#40| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [43]
(define-fun |encoder_6bit#41| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#40| state)) #b1) #b101011 (|encoder_6bit#39| state))) ; $procmux$119_Y
(declare-fun |encoder_6bit#42| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [42]
(define-fun |encoder_6bit#43| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#42| state)) #b1) #b101010 (|encoder_6bit#41| state))) ; $procmux$121_Y
(declare-fun |encoder_6bit#44| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [41]
(define-fun |encoder_6bit#45| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#44| state)) #b1) #b101001 (|encoder_6bit#43| state))) ; $procmux$123_Y
(declare-fun |encoder_6bit#46| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [40]
(define-fun |encoder_6bit#47| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#46| state)) #b1) #b101000 (|encoder_6bit#45| state))) ; $procmux$125_Y
(declare-fun |encoder_6bit#48| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [39]
(define-fun |encoder_6bit#49| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#48| state)) #b1) #b100111 (|encoder_6bit#47| state))) ; $procmux$127_Y
(declare-fun |encoder_6bit#50| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [38]
(define-fun |encoder_6bit#51| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#50| state)) #b1) #b100110 (|encoder_6bit#49| state))) ; $procmux$129_Y
(declare-fun |encoder_6bit#52| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [37]
(define-fun |encoder_6bit#53| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#52| state)) #b1) #b100101 (|encoder_6bit#51| state))) ; $procmux$131_Y
(declare-fun |encoder_6bit#54| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [36]
(define-fun |encoder_6bit#55| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#54| state)) #b1) #b100100 (|encoder_6bit#53| state))) ; $procmux$133_Y
(declare-fun |encoder_6bit#56| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [35]
(define-fun |encoder_6bit#57| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#56| state)) #b1) #b100011 (|encoder_6bit#55| state))) ; $procmux$135_Y
(declare-fun |encoder_6bit#58| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [34]
(define-fun |encoder_6bit#59| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#58| state)) #b1) #b100010 (|encoder_6bit#57| state))) ; $procmux$137_Y
(declare-fun |encoder_6bit#60| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [33]
(define-fun |encoder_6bit#61| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#60| state)) #b1) #b100001 (|encoder_6bit#59| state))) ; $procmux$139_Y
(declare-fun |encoder_6bit#62| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [32]
(define-fun |encoder_6bit#63| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#62| state)) #b1) #b100000 (|encoder_6bit#61| state))) ; $procmux$141_Y
(declare-fun |encoder_6bit#64| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [31]
(define-fun |encoder_6bit#65| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#64| state)) #b1) #b011111 (|encoder_6bit#63| state))) ; $procmux$143_Y
(declare-fun |encoder_6bit#66| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [30]
(define-fun |encoder_6bit#67| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#66| state)) #b1) #b011110 (|encoder_6bit#65| state))) ; $procmux$145_Y
(declare-fun |encoder_6bit#68| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [29]
(define-fun |encoder_6bit#69| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#68| state)) #b1) #b011101 (|encoder_6bit#67| state))) ; $procmux$147_Y
(declare-fun |encoder_6bit#70| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [28]
(define-fun |encoder_6bit#71| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#70| state)) #b1) #b011100 (|encoder_6bit#69| state))) ; $procmux$149_Y
(declare-fun |encoder_6bit#72| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [27]
(define-fun |encoder_6bit#73| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#72| state)) #b1) #b011011 (|encoder_6bit#71| state))) ; $procmux$151_Y
(declare-fun |encoder_6bit#74| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [26]
(define-fun |encoder_6bit#75| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#74| state)) #b1) #b011010 (|encoder_6bit#73| state))) ; $procmux$153_Y
(declare-fun |encoder_6bit#76| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [25]
(define-fun |encoder_6bit#77| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#76| state)) #b1) #b011001 (|encoder_6bit#75| state))) ; $procmux$155_Y
(declare-fun |encoder_6bit#78| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [24]
(define-fun |encoder_6bit#79| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#78| state)) #b1) #b011000 (|encoder_6bit#77| state))) ; $procmux$157_Y
(declare-fun |encoder_6bit#80| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [23]
(define-fun |encoder_6bit#81| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#80| state)) #b1) #b010111 (|encoder_6bit#79| state))) ; $procmux$159_Y
(declare-fun |encoder_6bit#82| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [22]
(define-fun |encoder_6bit#83| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#82| state)) #b1) #b010110 (|encoder_6bit#81| state))) ; $procmux$161_Y
(declare-fun |encoder_6bit#84| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [21]
(define-fun |encoder_6bit#85| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#84| state)) #b1) #b010101 (|encoder_6bit#83| state))) ; $procmux$163_Y
(declare-fun |encoder_6bit#86| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [20]
(define-fun |encoder_6bit#87| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#86| state)) #b1) #b010100 (|encoder_6bit#85| state))) ; $procmux$165_Y
(declare-fun |encoder_6bit#88| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [19]
(define-fun |encoder_6bit#89| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#88| state)) #b1) #b010011 (|encoder_6bit#87| state))) ; $procmux$167_Y
(declare-fun |encoder_6bit#90| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [18]
(define-fun |encoder_6bit#91| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#90| state)) #b1) #b010010 (|encoder_6bit#89| state))) ; $procmux$169_Y
(declare-fun |encoder_6bit#92| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [17]
(define-fun |encoder_6bit#93| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#92| state)) #b1) #b010001 (|encoder_6bit#91| state))) ; $procmux$171_Y
(declare-fun |encoder_6bit#94| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [16]
(define-fun |encoder_6bit#95| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#94| state)) #b1) #b010000 (|encoder_6bit#93| state))) ; $procmux$173_Y
(declare-fun |encoder_6bit#96| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [15]
(define-fun |encoder_6bit#97| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#96| state)) #b1) #b001111 (|encoder_6bit#95| state))) ; $procmux$175_Y
(declare-fun |encoder_6bit#98| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [14]
(define-fun |encoder_6bit#99| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#98| state)) #b1) #b001110 (|encoder_6bit#97| state))) ; $procmux$177_Y
(declare-fun |encoder_6bit#100| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [13]
(define-fun |encoder_6bit#101| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#100| state)) #b1) #b001101 (|encoder_6bit#99| state))) ; $procmux$179_Y
(declare-fun |encoder_6bit#102| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [12]
(define-fun |encoder_6bit#103| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#102| state)) #b1) #b001100 (|encoder_6bit#101| state))) ; $procmux$181_Y
(declare-fun |encoder_6bit#104| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [11]
(define-fun |encoder_6bit#105| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#104| state)) #b1) #b001011 (|encoder_6bit#103| state))) ; $procmux$183_Y
(declare-fun |encoder_6bit#106| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [10]
(define-fun |encoder_6bit#107| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#106| state)) #b1) #b001010 (|encoder_6bit#105| state))) ; $procmux$185_Y
(declare-fun |encoder_6bit#108| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [9]
(define-fun |encoder_6bit#109| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#108| state)) #b1) #b001001 (|encoder_6bit#107| state))) ; $procmux$187_Y
(declare-fun |encoder_6bit#110| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [8]
(define-fun |encoder_6bit#111| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#110| state)) #b1) #b001000 (|encoder_6bit#109| state))) ; $procmux$189_Y
(declare-fun |encoder_6bit#112| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [7]
(define-fun |encoder_6bit#113| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#112| state)) #b1) #b000111 (|encoder_6bit#111| state))) ; $procmux$191_Y
(declare-fun |encoder_6bit#114| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [6]
(define-fun |encoder_6bit#115| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#114| state)) #b1) #b000110 (|encoder_6bit#113| state))) ; $procmux$193_Y
(declare-fun |encoder_6bit#116| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [5]
(define-fun |encoder_6bit#117| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#116| state)) #b1) #b000101 (|encoder_6bit#115| state))) ; $procmux$195_Y
(declare-fun |encoder_6bit#118| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [4]
(define-fun |encoder_6bit#119| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#118| state)) #b1) #b000100 (|encoder_6bit#117| state))) ; $procmux$197_Y
(declare-fun |encoder_6bit#120| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [3]
(define-fun |encoder_6bit#121| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#120| state)) #b1) #b000011 (|encoder_6bit#119| state))) ; $procmux$199_Y
(declare-fun |encoder_6bit#122| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [2]
(define-fun |encoder_6bit#123| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#122| state)) #b1) #b000010 (|encoder_6bit#121| state))) ; $procmux$201_Y
(declare-fun |encoder_6bit#124| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [1]
(define-fun |encoder_6bit#125| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#124| state)) #b1) #b000001 (|encoder_6bit#123| state))) ; $procmux$203_Y
(declare-fun |encoder_6bit#126| (|encoder_6bit_s|) (_ BitVec 1)) ; \i_vec [0]
(define-fun |encoder_6bit#127| ((state |encoder_6bit_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|encoder_6bit#126| state)) #b1) #b000000 (|encoder_6bit#125| state))) ; \o_code
; yosys-smt2-output o_code 6
; yosys-smt2-wire o_code 6
(define-fun |encoder_6bit_n o_code| ((state |encoder_6bit_s|)) (_ BitVec 6) (|encoder_6bit#127| state))
; yosys-smt2-input i_vec 64
; yosys-smt2-wire i_vec 64
; yosys-smt2-witness {"offset": 0, "path": ["\\i_vec"], "smtname": "i_vec", "smtoffset": 0, "type": "input", "width": 64}
(define-fun |encoder_6bit_n i_vec| ((state |encoder_6bit_s|)) (_ BitVec 64) (concat (|encoder_6bit#0| state) (concat (|encoder_6bit#2| state) (concat (|encoder_6bit#4| state) (concat (|encoder_6bit#6| state) (concat (|encoder_6bit#8| state) (concat (|encoder_6bit#10| state) (concat (|encoder_6bit#12| state) (concat (|encoder_6bit#14| state) (concat (|encoder_6bit#16| state) (concat (|encoder_6bit#18| state) (concat (|encoder_6bit#20| state) (concat (|encoder_6bit#22| state) (concat (|encoder_6bit#24| state) (concat (|encoder_6bit#26| state) (concat (|encoder_6bit#28| state) (concat (|encoder_6bit#30| state) (concat (|encoder_6bit#32| state) (concat (|encoder_6bit#34| state) (concat (|encoder_6bit#36| state) (concat (|encoder_6bit#38| state) (concat (|encoder_6bit#40| state) (concat (|encoder_6bit#42| state) (concat (|encoder_6bit#44| state) (concat (|encoder_6bit#46| state) (concat (|encoder_6bit#48| state) (concat (|encoder_6bit#50| state) (concat (|encoder_6bit#52| state) (concat (|encoder_6bit#54| state) (concat (|encoder_6bit#56| state) (concat (|encoder_6bit#58| state) (concat (|encoder_6bit#60| state) (concat (|encoder_6bit#62| state) (concat (|encoder_6bit#64| state) (concat (|encoder_6bit#66| state) (concat (|encoder_6bit#68| state) (concat (|encoder_6bit#70| state) (concat (|encoder_6bit#72| state) (concat (|encoder_6bit#74| state) (concat (|encoder_6bit#76| state) (concat (|encoder_6bit#78| state) (concat (|encoder_6bit#80| state) (concat (|encoder_6bit#82| state) (concat (|encoder_6bit#84| state) (concat (|encoder_6bit#86| state) (concat (|encoder_6bit#88| state) (concat (|encoder_6bit#90| state) (concat (|encoder_6bit#92| state) (concat (|encoder_6bit#94| state) (concat (|encoder_6bit#96| state) (concat (|encoder_6bit#98| state) (concat (|encoder_6bit#100| state) (concat (|encoder_6bit#102| state) (concat (|encoder_6bit#104| state) (concat (|encoder_6bit#106| state) (concat (|encoder_6bit#108| state) (concat (|encoder_6bit#110| state) (concat (|encoder_6bit#112| state) (concat (|encoder_6bit#114| state) (concat (|encoder_6bit#116| state) (concat (|encoder_6bit#118| state) (concat (|encoder_6bit#120| state) (concat (|encoder_6bit#122| state) (concat (|encoder_6bit#124| state) (|encoder_6bit#126| state)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun |encoder_6bit_a| ((state |encoder_6bit_s|)) Bool true)
(define-fun |encoder_6bit_u| ((state |encoder_6bit_s|)) Bool true)
(define-fun |encoder_6bit_i| ((state |encoder_6bit_s|)) Bool true)
(define-fun |encoder_6bit_h| ((state |encoder_6bit_s|)) Bool true)
(define-fun |encoder_6bit_t| ((state |encoder_6bit_s|) (next_state |encoder_6bit_s|)) Bool true) ; end of module encoder_6bit
; yosys-smt2-module free_list
(declare-sort |free_list_s| 0)
(declare-fun |free_list_is| (|free_list_s|) Bool)
(declare-fun |free_list#0| (|free_list_s|) (_ BitVec 3)) ; \i_ret_count
(define-fun |free_list#1| ((state |free_list_s|)) Bool (= (|free_list#0| state) #b100)) ; \ret_mask [0]
(define-fun |free_list#2| ((state |free_list_s|)) Bool (bvugt (|free_list#0| state) #b010)) ; \ret_mask [1]
(define-fun |free_list#3| ((state |free_list_s|)) Bool (bvugt (|free_list#0| state) #b001)) ; \ret_mask [2]
(define-fun |free_list#4| ((state |free_list_s|)) Bool (distinct (|free_list#0| state) #b000)) ; \ret_mask [3]
; yosys-smt2-wire ret_mask 4
(define-fun |free_list_n ret_mask| ((state |free_list_s|)) (_ BitVec 4) (concat (ite (|free_list#4| state) #b1 #b0) (concat (ite (|free_list#3| state) #b1 #b0) (concat (ite (|free_list#2| state) #b1 #b0) (ite (|free_list#1| state) #b1 #b0)))))
; yosys-smt2-cell encoder_6bit enc3
; yosys-smt2-witness {"path": ["\\enc3"], "smtname": "enc3", "type": "cell"}
(declare-fun |free_list#5| (|free_list_s|) (_ BitVec 6)) ; \req3
(declare-fun |free_list_h enc3| (|free_list_s|) |encoder_6bit_s|)
; yosys-smt2-wire req3 6
(define-fun |free_list_n req3| ((state |free_list_s|)) (_ BitVec 6) (|free_list#5| state))
; yosys-smt2-cell encoder_6bit enc2
; yosys-smt2-witness {"path": ["\\enc2"], "smtname": "enc2", "type": "cell"}
(declare-fun |free_list#6| (|free_list_s|) (_ BitVec 6)) ; \req2
(declare-fun |free_list_h enc2| (|free_list_s|) |encoder_6bit_s|)
; yosys-smt2-wire req2 6
(define-fun |free_list_n req2| ((state |free_list_s|)) (_ BitVec 6) (|free_list#6| state))
; yosys-smt2-cell encoder_6bit enc1
; yosys-smt2-witness {"path": ["\\enc1"], "smtname": "enc1", "type": "cell"}
(declare-fun |free_list#7| (|free_list_s|) (_ BitVec 6)) ; \req1
(declare-fun |free_list_h enc1| (|free_list_s|) |encoder_6bit_s|)
; yosys-smt2-wire req1 6
(define-fun |free_list_n req1| ((state |free_list_s|)) (_ BitVec 6) (|free_list#7| state))
; yosys-smt2-cell encoder_6bit enc0
; yosys-smt2-witness {"path": ["\\enc0"], "smtname": "enc0", "type": "cell"}
(declare-fun |free_list#8| (|free_list_s|) (_ BitVec 6)) ; \req0
(declare-fun |free_list_h enc0| (|free_list_s|) |encoder_6bit_s|)
; yosys-smt2-wire req0 6
(define-fun |free_list_n req0| ((state |free_list_s|)) (_ BitVec 6) (|free_list#8| state))
(declare-fun |free_list#9| (|free_list_s|) (_ BitVec 6)) ; \i_ret_p3
(define-fun |free_list#10| ((state |free_list_s|)) (_ BitVec 48) (bvshl (concat #b00000000000000000000000000000000000000000000000 (ite (|free_list#1| state) #b1 #b0)) (concat #b000000000000000000000000000000000000000000 (|free_list#9| state)))) ; \released3
; yosys-smt2-wire released3 48
(define-fun |free_list_n released3| ((state |free_list_s|)) (_ BitVec 48) (|free_list#10| state))
(declare-fun |free_list#11| (|free_list_s|) (_ BitVec 6)) ; \i_ret_p2
(define-fun |free_list#12| ((state |free_list_s|)) (_ BitVec 48) (bvshl (concat #b00000000000000000000000000000000000000000000000 (ite (|free_list#2| state) #b1 #b0)) (concat #b000000000000000000000000000000000000000000 (|free_list#11| state)))) ; \released2
; yosys-smt2-wire released2 48
(define-fun |free_list_n released2| ((state |free_list_s|)) (_ BitVec 48) (|free_list#12| state))
(declare-fun |free_list#13| (|free_list_s|) (_ BitVec 6)) ; \i_ret_p1
(define-fun |free_list#14| ((state |free_list_s|)) (_ BitVec 48) (bvshl (concat #b00000000000000000000000000000000000000000000000 (ite (|free_list#3| state) #b1 #b0)) (concat #b000000000000000000000000000000000000000000 (|free_list#13| state)))) ; \released1
; yosys-smt2-wire released1 48
(define-fun |free_list_n released1| ((state |free_list_s|)) (_ BitVec 48) (|free_list#14| state))
(declare-fun |free_list#15| (|free_list_s|) (_ BitVec 6)) ; \i_ret_p0
(define-fun |free_list#16| ((state |free_list_s|)) (_ BitVec 48) (bvshl (concat #b00000000000000000000000000000000000000000000000 (ite (|free_list#4| state) #b1 #b0)) (concat #b000000000000000000000000000000000000000000 (|free_list#15| state)))) ; \released0
; yosys-smt2-wire released0 48
(define-fun |free_list_n released0| ((state |free_list_s|)) (_ BitVec 48) (|free_list#16| state))
; yosys-smt2-anyinit free_list#17 48 $auto$clk2fflogic.cc:98:sample_data$310
; yosys-smt2-witness {"offset": 0, "path": ["\\free"], "smtname": 17, "smtoffset": 0, "type": "init", "width": 48}
(declare-fun |free_list#17| (|free_list_s|) (_ BitVec 48)) ; $auto$clk2fflogic.cc:91:sample_data$\free#sampled$309
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:91:sample_data$$0\\free[47:0]#sampled$311"], "smtname": 18, "smtoffset": 0, "type": "reg", "width": 48}
(declare-fun |free_list#18| (|free_list_s|) (_ BitVec 48)) ; $auto$clk2fflogic.cc:91:sample_data$$0\free[47:0]#sampled$311
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:77:sample_control_edge$\\i_clk#sampled$253"], "smtname": 19, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |free_list#19| (|free_list_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:77:sample_control_edge$\i_clk#sampled$253
(declare-fun |free_list#20| (|free_list_s|) (_ BitVec 1)) ; \i_clk
(define-fun |free_list#21| ((state |free_list_s|)) Bool (= (concat (|free_list#19| state) (|free_list#20| state)) #b01)) ; $auto$rtlil.cc:2489:ReduceOr$262
(define-fun |free_list#22| ((state |free_list_s|)) (_ BitVec 48) (ite (|free_list#21| state) (|free_list#18| state) (|free_list#17| state))) ; $auto$rtlil.cc:2582:Mux$318
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:65:sample_control$$auto$rtlil.cc:2485:Not$320#sampled$321"], "smtname": 23, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |free_list#23| (|free_list_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:65:sample_control$$auto$rtlil.cc:2485:Not$320#sampled$321
(define-fun |free_list#24| ((state |free_list_s|)) (_ BitVec 48) (ite (= ((_ extract 0 0) (|free_list#23| state)) #b1) #b111111111111111111111111111111111111111111111111 (|free_list#22| state))) ; $auto$rtlil.cc:2582:Mux$324
(declare-fun |free_list#25| (|free_list_s|) (_ BitVec 1)) ; \i_rst_n
(define-fun |free_list#26| ((state |free_list_s|)) (_ BitVec 48) (ite (= ((_ extract 0 0) (|free_list#25| state)) #b1) (|free_list#24| state) #b111111111111111111111111111111111111111111111111)) ; \free
(define-fun |free_list#27| ((state |free_list_s|)) (_ BitVec 48) (bvor (|free_list#26| state) (|free_list#16| state))) ; $or$free_list.v:31$15_Y
(define-fun |free_list#28| ((state |free_list_s|)) (_ BitVec 48) (bvor (|free_list#27| state) (|free_list#14| state))) ; $or$free_list.v:31$16_Y
(define-fun |free_list#29| ((state |free_list_s|)) (_ BitVec 48) (bvor (|free_list#28| state) (|free_list#12| state))) ; $or$free_list.v:31$17_Y
(define-fun |free_list#30| ((state |free_list_s|)) (_ BitVec 48) (bvor (|free_list#29| state) (|free_list#10| state))) ; \released
; yosys-smt2-wire released 48
(define-fun |free_list_n released| ((state |free_list_s|)) (_ BitVec 48) (|free_list#30| state))
; yosys-smt2-anyinit free_list#31 3 $auto$clk2fflogic.cc:98:sample_data$346
; yosys-smt2-witness {"offset": 0, "path": ["\\o_req_count"], "smtname": 31, "smtoffset": 0, "type": "init", "width": 3}
(declare-fun |free_list#31| (|free_list_s|) (_ BitVec 3)) ; $auto$clk2fflogic.cc:91:sample_data$\o_req_count#sampled$345
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:91:sample_data$\\i_req_count#sampled$347"], "smtname": 32, "smtoffset": 0, "type": "reg", "width": 3}
(declare-fun |free_list#32| (|free_list_s|) (_ BitVec 3)) ; $auto$clk2fflogic.cc:91:sample_data$\i_req_count#sampled$347
(define-fun |free_list#33| ((state |free_list_s|)) (_ BitVec 3) (ite (|free_list#21| state) (|free_list#32| state) (|free_list#31| state))) ; $auto$rtlil.cc:2582:Mux$354
(define-fun |free_list#34| ((state |free_list_s|)) (_ BitVec 3) (ite (= ((_ extract 0 0) (|free_list#23| state)) #b1) #b000 (|free_list#33| state))) ; $auto$rtlil.cc:2582:Mux$360
(define-fun |free_list#35| ((state |free_list_s|)) (_ BitVec 3) (ite (= ((_ extract 0 0) (|free_list#25| state)) #b1) (|free_list#34| state) #b000)) ; \o_req_count
; yosys-smt2-output o_req_count 3
; yosys-smt2-wire o_req_count 3
(define-fun |free_list_n o_req_count| ((state |free_list_s|)) (_ BitVec 3) (|free_list#35| state))
; yosys-smt2-anyinit free_list#36 6 $auto$clk2fflogic.cc:98:sample_data$364
; yosys-smt2-witness {"offset": 0, "path": ["\\o_req3"], "smtname": 36, "smtoffset": 0, "type": "init", "width": 6}
(declare-fun |free_list#36| (|free_list_s|) (_ BitVec 6)) ; $auto$clk2fflogic.cc:91:sample_data$\o_req3#sampled$363
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:91:sample_data$\\req3#sampled$365"], "smtname": 37, "smtoffset": 0, "type": "reg", "width": 6}
(declare-fun |free_list#37| (|free_list_s|) (_ BitVec 6)) ; $auto$clk2fflogic.cc:91:sample_data$\req3#sampled$365
(define-fun |free_list#38| ((state |free_list_s|)) (_ BitVec 6) (ite (|free_list#21| state) (|free_list#37| state) (|free_list#36| state))) ; $auto$rtlil.cc:2582:Mux$372
(define-fun |free_list#39| ((state |free_list_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|free_list#23| state)) #b1) #b000000 (|free_list#38| state))) ; $auto$rtlil.cc:2582:Mux$378
(define-fun |free_list#40| ((state |free_list_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|free_list#25| state)) #b1) (|free_list#39| state) #b000000)) ; \o_req3
; yosys-smt2-output o_req3 6
; yosys-smt2-wire o_req3 6
(define-fun |free_list_n o_req3| ((state |free_list_s|)) (_ BitVec 6) (|free_list#40| state))
; yosys-smt2-anyinit free_list#41 6 $auto$clk2fflogic.cc:98:sample_data$382
; yosys-smt2-witness {"offset": 0, "path": ["\\o_req2"], "smtname": 41, "smtoffset": 0, "type": "init", "width": 6}
(declare-fun |free_list#41| (|free_list_s|) (_ BitVec 6)) ; $auto$clk2fflogic.cc:91:sample_data$\o_req2#sampled$381
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:91:sample_data$\\req2#sampled$383"], "smtname": 42, "smtoffset": 0, "type": "reg", "width": 6}
(declare-fun |free_list#42| (|free_list_s|) (_ BitVec 6)) ; $auto$clk2fflogic.cc:91:sample_data$\req2#sampled$383
(define-fun |free_list#43| ((state |free_list_s|)) (_ BitVec 6) (ite (|free_list#21| state) (|free_list#42| state) (|free_list#41| state))) ; $auto$rtlil.cc:2582:Mux$390
(define-fun |free_list#44| ((state |free_list_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|free_list#23| state)) #b1) #b000000 (|free_list#43| state))) ; $auto$rtlil.cc:2582:Mux$396
(define-fun |free_list#45| ((state |free_list_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|free_list#25| state)) #b1) (|free_list#44| state) #b000000)) ; \o_req2
; yosys-smt2-output o_req2 6
; yosys-smt2-wire o_req2 6
(define-fun |free_list_n o_req2| ((state |free_list_s|)) (_ BitVec 6) (|free_list#45| state))
; yosys-smt2-anyinit free_list#46 6 $auto$clk2fflogic.cc:98:sample_data$400
; yosys-smt2-witness {"offset": 0, "path": ["\\o_req1"], "smtname": 46, "smtoffset": 0, "type": "init", "width": 6}
(declare-fun |free_list#46| (|free_list_s|) (_ BitVec 6)) ; $auto$clk2fflogic.cc:91:sample_data$\o_req1#sampled$399
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:91:sample_data$\\req1#sampled$401"], "smtname": 47, "smtoffset": 0, "type": "reg", "width": 6}
(declare-fun |free_list#47| (|free_list_s|) (_ BitVec 6)) ; $auto$clk2fflogic.cc:91:sample_data$\req1#sampled$401
(define-fun |free_list#48| ((state |free_list_s|)) (_ BitVec 6) (ite (|free_list#21| state) (|free_list#47| state) (|free_list#46| state))) ; $auto$rtlil.cc:2582:Mux$408
(define-fun |free_list#49| ((state |free_list_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|free_list#23| state)) #b1) #b000000 (|free_list#48| state))) ; $auto$rtlil.cc:2582:Mux$414
(define-fun |free_list#50| ((state |free_list_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|free_list#25| state)) #b1) (|free_list#49| state) #b000000)) ; \o_req1
; yosys-smt2-output o_req1 6
; yosys-smt2-wire o_req1 6
(define-fun |free_list_n o_req1| ((state |free_list_s|)) (_ BitVec 6) (|free_list#50| state))
; yosys-smt2-anyinit free_list#51 6 $auto$clk2fflogic.cc:98:sample_data$418
; yosys-smt2-witness {"offset": 0, "path": ["\\o_req0"], "smtname": 51, "smtoffset": 0, "type": "init", "width": 6}
(declare-fun |free_list#51| (|free_list_s|) (_ BitVec 6)) ; $auto$clk2fflogic.cc:91:sample_data$\o_req0#sampled$417
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:91:sample_data$\\req0#sampled$419"], "smtname": 52, "smtoffset": 0, "type": "reg", "width": 6}
(declare-fun |free_list#52| (|free_list_s|) (_ BitVec 6)) ; $auto$clk2fflogic.cc:91:sample_data$\req0#sampled$419
(define-fun |free_list#53| ((state |free_list_s|)) (_ BitVec 6) (ite (|free_list#21| state) (|free_list#52| state) (|free_list#51| state))) ; $auto$rtlil.cc:2582:Mux$426
(define-fun |free_list#54| ((state |free_list_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|free_list#23| state)) #b1) #b000000 (|free_list#53| state))) ; $auto$rtlil.cc:2582:Mux$432
(define-fun |free_list#55| ((state |free_list_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|free_list#25| state)) #b1) (|free_list#54| state) #b000000)) ; \o_req0
; yosys-smt2-output o_req0 6
; yosys-smt2-wire o_req0 6
(define-fun |free_list_n o_req0| ((state |free_list_s|)) (_ BitVec 6) (|free_list#55| state))
; yosys-smt2-anyinit free_list#56 6 $auto$clk2fflogic.cc:98:sample_data$328
; yosys-smt2-witness {"offset": 0, "path": ["\\o_avail_count"], "smtname": 56, "smtoffset": 0, "type": "init", "width": 6}
(declare-fun |free_list#56| (|free_list_s|) (_ BitVec 6)) ; $auto$clk2fflogic.cc:91:sample_data$\o_avail_count#sampled$327
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:91:sample_data$$0\\o_avail_count[5:0]#sampled$329"], "smtname": 57, "smtoffset": 0, "type": "reg", "width": 6}
(declare-fun |free_list#57| (|free_list_s|) (_ BitVec 6)) ; $auto$clk2fflogic.cc:91:sample_data$$0\o_avail_count[5:0]#sampled$329
(define-fun |free_list#58| ((state |free_list_s|)) (_ BitVec 6) (ite (|free_list#21| state) (|free_list#57| state) (|free_list#56| state))) ; $auto$rtlil.cc:2582:Mux$336
(define-fun |free_list#59| ((state |free_list_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|free_list#23| state)) #b1) #b110000 (|free_list#58| state))) ; $auto$rtlil.cc:2582:Mux$342
(define-fun |free_list#60| ((state |free_list_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|free_list#25| state)) #b1) (|free_list#59| state) #b110000)) ; \o_avail_count
; yosys-smt2-output o_avail_count 6
; yosys-smt2-wire o_avail_count 6
(define-fun |free_list_n o_avail_count| ((state |free_list_s|)) (_ BitVec 6) (|free_list#60| state))
(define-fun |free_list#61| ((state |free_list_s|)) (_ BitVec 48) (bvsub (|free_list#30| state) #b000000000000000000000000000000000000000000000001)) ; $sub$free_list.v:33$19_Y
(define-fun |free_list#62| ((state |free_list_s|)) (_ BitVec 48) (bvand (|free_list#30| state) (|free_list#61| state))) ; \clb0
(define-fun |free_list#63| ((state |free_list_s|)) (_ BitVec 48) (bvsub (|free_list#62| state) #b000000000000000000000000000000000000000000000001)) ; $sub$free_list.v:34$21_Y
(define-fun |free_list#64| ((state |free_list_s|)) (_ BitVec 48) (bvand (|free_list#62| state) (|free_list#63| state))) ; \clb1
(define-fun |free_list#65| ((state |free_list_s|)) (_ BitVec 48) (bvsub (|free_list#64| state) #b000000000000000000000000000000000000000000000001)) ; $sub$free_list.v:35$23_Y
(define-fun |free_list#66| ((state |free_list_s|)) (_ BitVec 48) (bvand (|free_list#64| state) (|free_list#65| state))) ; \clb2
(define-fun |free_list#67| ((state |free_list_s|)) (_ BitVec 48) (bvsub (|free_list#66| state) #b000000000000000000000000000000000000000000000001)) ; $sub$free_list.v:36$25_Y
(define-fun |free_list#68| ((state |free_list_s|)) (_ BitVec 48) (bvand (|free_list#66| state) (|free_list#67| state))) ; \clb3
(define-fun |free_list#69| ((state |free_list_s|)) (_ BitVec 48) (bvxor (|free_list#66| state) (|free_list#68| state))) ; \mask3
; yosys-smt2-wire mask3 48
(define-fun |free_list_n mask3| ((state |free_list_s|)) (_ BitVec 48) (|free_list#69| state))
(define-fun |free_list#70| ((state |free_list_s|)) (_ BitVec 48) (bvxor (|free_list#64| state) (|free_list#66| state))) ; \mask2
; yosys-smt2-wire mask2 48
(define-fun |free_list_n mask2| ((state |free_list_s|)) (_ BitVec 48) (|free_list#70| state))
(define-fun |free_list#71| ((state |free_list_s|)) (_ BitVec 48) (bvxor (|free_list#62| state) (|free_list#64| state))) ; \mask1
; yosys-smt2-wire mask1 48
(define-fun |free_list_n mask1| ((state |free_list_s|)) (_ BitVec 48) (|free_list#71| state))
(define-fun |free_list#72| ((state |free_list_s|)) (_ BitVec 48) (bvxor (|free_list#30| state) (|free_list#62| state))) ; \mask0
; yosys-smt2-wire mask0 48
(define-fun |free_list_n mask0| ((state |free_list_s|)) (_ BitVec 48) (|free_list#72| state))
; yosys-smt2-input i_rst_n 1
; yosys-smt2-wire i_rst_n 1
; yosys-smt2-witness {"offset": 0, "path": ["\\i_rst_n"], "smtname": "i_rst_n", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |free_list_n i_rst_n| ((state |free_list_s|)) Bool (= ((_ extract 0 0) (|free_list#25| state)) #b1))
; yosys-smt2-input i_ret_p3 6
; yosys-smt2-wire i_ret_p3 6
; yosys-smt2-witness {"offset": 0, "path": ["\\i_ret_p3"], "smtname": "i_ret_p3", "smtoffset": 0, "type": "input", "width": 6}
(define-fun |free_list_n i_ret_p3| ((state |free_list_s|)) (_ BitVec 6) (|free_list#9| state))
; yosys-smt2-input i_ret_p2 6
; yosys-smt2-wire i_ret_p2 6
; yosys-smt2-witness {"offset": 0, "path": ["\\i_ret_p2"], "smtname": "i_ret_p2", "smtoffset": 0, "type": "input", "width": 6}
(define-fun |free_list_n i_ret_p2| ((state |free_list_s|)) (_ BitVec 6) (|free_list#11| state))
; yosys-smt2-input i_ret_p1 6
; yosys-smt2-wire i_ret_p1 6
; yosys-smt2-witness {"offset": 0, "path": ["\\i_ret_p1"], "smtname": "i_ret_p1", "smtoffset": 0, "type": "input", "width": 6}
(define-fun |free_list_n i_ret_p1| ((state |free_list_s|)) (_ BitVec 6) (|free_list#13| state))
; yosys-smt2-input i_ret_p0 6
; yosys-smt2-wire i_ret_p0 6
; yosys-smt2-witness {"offset": 0, "path": ["\\i_ret_p0"], "smtname": "i_ret_p0", "smtoffset": 0, "type": "input", "width": 6}
(define-fun |free_list_n i_ret_p0| ((state |free_list_s|)) (_ BitVec 6) (|free_list#15| state))
; yosys-smt2-input i_ret_count 3
; yosys-smt2-wire i_ret_count 3
; yosys-smt2-witness {"offset": 0, "path": ["\\i_ret_count"], "smtname": "i_ret_count", "smtoffset": 0, "type": "input", "width": 3}
(define-fun |free_list_n i_ret_count| ((state |free_list_s|)) (_ BitVec 3) (|free_list#0| state))
(declare-fun |free_list#73| (|free_list_s|) (_ BitVec 3)) ; \i_req_count
; yosys-smt2-input i_req_count 3
; yosys-smt2-wire i_req_count 3
; yosys-smt2-witness {"offset": 0, "path": ["\\i_req_count"], "smtname": "i_req_count", "smtoffset": 0, "type": "input", "width": 3}
(define-fun |free_list_n i_req_count| ((state |free_list_s|)) (_ BitVec 3) (|free_list#73| state))
; yosys-smt2-input i_clk 1
; yosys-smt2-wire i_clk 1
; yosys-smt2-witness {"offset": 0, "path": ["\\i_clk"], "smtname": "i_clk", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |free_list_n i_clk| ((state |free_list_s|)) Bool (= ((_ extract 0 0) (|free_list#20| state)) #b1))
; yosys-smt2-wire free 48
(define-fun |free_list_n free| ((state |free_list_s|)) (_ BitVec 48) (|free_list#26| state))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:91:sample_data$\\f_past_valid#sampled$435"], "smtname": 74, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |free_list#74| (|free_list_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:91:sample_data$\f_past_valid#sampled$435
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:91:sample_data$1'1#sampled$437"], "smtname": 75, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |free_list#75| (|free_list_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:91:sample_data$1'1#sampled$437
(define-fun |free_list#76| ((state |free_list_s|)) (_ BitVec 1) (ite (|free_list#21| state) (|free_list#75| state) (|free_list#74| state))) ; \f_past_valid
; yosys-smt2-wire f_past_valid 1
(define-fun |free_list_n f_past_valid| ((state |free_list_s|)) Bool (= ((_ extract 0 0) (|free_list#76| state)) #b1))
; yosys-smt2-wire clb3 48
(define-fun |free_list_n clb3| ((state |free_list_s|)) (_ BitVec 48) (|free_list#68| state))
; yosys-smt2-wire clb2 48
(define-fun |free_list_n clb2| ((state |free_list_s|)) (_ BitVec 48) (|free_list#66| state))
; yosys-smt2-wire clb1 48
(define-fun |free_list_n clb1| ((state |free_list_s|)) (_ BitVec 48) (|free_list#64| state))
; yosys-smt2-wire clb0 48
(define-fun |free_list_n clb0| ((state |free_list_s|)) (_ BitVec 48) (|free_list#62| state))
; yosys-smt2-anyinit free_list#77 1 $auto$clk2fflogic.cc:98:sample_data$496
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_auto_clk2fflogic_cc_98_sample_data_496"], "smtname": 77, "smtoffset": 0, "type": "init", "width": 1}
(declare-fun |free_list#77| (|free_list_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:95$1$0#sampled$495
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:91:sample_data$\\i_rst_n#sampled$497"], "smtname": 78, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |free_list#78| (|free_list_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:91:sample_data$\i_rst_n#sampled$497
(define-fun |free_list#79| ((state |free_list_s|)) (_ BitVec 1) (ite (|free_list#21| state) (|free_list#78| state) (|free_list#77| state))) ; \_witness_.anyinit_auto_clk2fflogic_cc_98_sample_data_496
; yosys-smt2-wire _witness_.anyinit_auto_clk2fflogic_cc_98_sample_data_496 1
(define-fun |free_list_n _witness_.anyinit_auto_clk2fflogic_cc_98_sample_data_496| ((state |free_list_s|)) Bool (= ((_ extract 0 0) (|free_list#79| state)) #b1))
; yosys-smt2-anyinit free_list#80 3 $auto$clk2fflogic.cc:98:sample_data$486
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_auto_clk2fflogic_cc_98_sample_data_486"], "smtname": 80, "smtoffset": 0, "type": "init", "width": 3}
(declare-fun |free_list#80| (|free_list_s|) (_ BitVec 3)) ; $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:99$2$0#sampled$485
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:91:sample_data$\\i_ret_count#sampled$487"], "smtname": 81, "smtoffset": 0, "type": "reg", "width": 3}
(declare-fun |free_list#81| (|free_list_s|) (_ BitVec 3)) ; $auto$clk2fflogic.cc:91:sample_data$\i_ret_count#sampled$487
(define-fun |free_list#82| ((state |free_list_s|)) (_ BitVec 3) (ite (|free_list#21| state) (|free_list#81| state) (|free_list#80| state))) ; \_witness_.anyinit_auto_clk2fflogic_cc_98_sample_data_486
; yosys-smt2-wire _witness_.anyinit_auto_clk2fflogic_cc_98_sample_data_486 3
(define-fun |free_list_n _witness_.anyinit_auto_clk2fflogic_cc_98_sample_data_486| ((state |free_list_s|)) (_ BitVec 3) (|free_list#82| state))
; yosys-smt2-anyinit free_list#83 1 $auto$clk2fflogic.cc:98:sample_data$476
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_auto_clk2fflogic_cc_98_sample_data_476"], "smtname": 83, "smtoffset": 0, "type": "init", "width": 1}
(declare-fun |free_list#83| (|free_list_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:100$3$0#sampled$475
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:91:sample_data$$0$past$free_list.v:100$3$0[0:0]$47#sampled$477"], "smtname": 84, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |free_list#84| (|free_list_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:91:sample_data$$0$past$free_list.v:100$3$0[0:0]$47#sampled$477
(define-fun |free_list#85| ((state |free_list_s|)) (_ BitVec 1) (ite (|free_list#21| state) (|free_list#84| state) (|free_list#83| state))) ; \_witness_.anyinit_auto_clk2fflogic_cc_98_sample_data_476
; yosys-smt2-wire _witness_.anyinit_auto_clk2fflogic_cc_98_sample_data_476 1
(define-fun |free_list_n _witness_.anyinit_auto_clk2fflogic_cc_98_sample_data_476| ((state |free_list_s|)) Bool (= ((_ extract 0 0) (|free_list#85| state)) #b1))
; yosys-smt2-anyinit free_list#86 6 $auto$clk2fflogic.cc:98:sample_data$466
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_auto_clk2fflogic_cc_98_sample_data_466"], "smtname": 86, "smtoffset": 0, "type": "init", "width": 6}
(declare-fun |free_list#86| (|free_list_s|) (_ BitVec 6)) ; $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:101$4$0#sampled$465
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:91:sample_data$\\o_req0#sampled$447"], "smtname": 87, "smtoffset": 0, "type": "reg", "width": 6}
(declare-fun |free_list#87| (|free_list_s|) (_ BitVec 6)) ; $auto$clk2fflogic.cc:91:sample_data$\o_req0#sampled$447
(define-fun |free_list#88| ((state |free_list_s|)) (_ BitVec 6) (ite (|free_list#21| state) (|free_list#87| state) (|free_list#86| state))) ; \_witness_.anyinit_auto_clk2fflogic_cc_98_sample_data_466
; yosys-smt2-wire _witness_.anyinit_auto_clk2fflogic_cc_98_sample_data_466 6
(define-fun |free_list_n _witness_.anyinit_auto_clk2fflogic_cc_98_sample_data_466| ((state |free_list_s|)) (_ BitVec 6) (|free_list#88| state))
; yosys-smt2-anyinit free_list#89 1 $auto$clk2fflogic.cc:98:sample_data$456
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_auto_clk2fflogic_cc_98_sample_data_456"], "smtname": 89, "smtoffset": 0, "type": "init", "width": 1}
(declare-fun |free_list#89| (|free_list_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:101$5$0#sampled$455
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:91:sample_data$$0$past$free_list.v:101$5$0[0:0]$49#sampled$457"], "smtname": 90, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |free_list#90| (|free_list_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:91:sample_data$$0$past$free_list.v:101$5$0[0:0]$49#sampled$457
(define-fun |free_list#91| ((state |free_list_s|)) (_ BitVec 1) (ite (|free_list#21| state) (|free_list#90| state) (|free_list#89| state))) ; \_witness_.anyinit_auto_clk2fflogic_cc_98_sample_data_456
; yosys-smt2-wire _witness_.anyinit_auto_clk2fflogic_cc_98_sample_data_456 1
(define-fun |free_list_n _witness_.anyinit_auto_clk2fflogic_cc_98_sample_data_456| ((state |free_list_s|)) Bool (= ((_ extract 0 0) (|free_list#91| state)) #b1))
; yosys-smt2-anyinit free_list#92 6 $auto$clk2fflogic.cc:98:sample_data$446
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_auto_clk2fflogic_cc_98_sample_data_446"], "smtname": 92, "smtoffset": 0, "type": "init", "width": 6}
(declare-fun |free_list#92| (|free_list_s|) (_ BitVec 6)) ; $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:102$6$0#sampled$445
(define-fun |free_list#93| ((state |free_list_s|)) (_ BitVec 6) (ite (|free_list#21| state) (|free_list#87| state) (|free_list#92| state))) ; \_witness_.anyinit_auto_clk2fflogic_cc_98_sample_data_446
; yosys-smt2-wire _witness_.anyinit_auto_clk2fflogic_cc_98_sample_data_446 6
(define-fun |free_list_n _witness_.anyinit_auto_clk2fflogic_cc_98_sample_data_446| ((state |free_list_s|)) (_ BitVec 6) (|free_list#93| state))
; yosys-smt2-wire $past$free_list.v:99$2$0 3
(define-fun |free_list_n $past$free_list.v:99$2$0| ((state |free_list_s|)) (_ BitVec 3) (|free_list#82| state))
; yosys-smt2-wire $past$free_list.v:95$1$0 1
(define-fun |free_list_n $past$free_list.v:95$1$0| ((state |free_list_s|)) Bool (= ((_ extract 0 0) (|free_list#79| state)) #b1))
; yosys-smt2-wire $past$free_list.v:102$6$0 6
(define-fun |free_list_n $past$free_list.v:102$6$0| ((state |free_list_s|)) (_ BitVec 6) (|free_list#93| state))
; yosys-smt2-wire $past$free_list.v:101$5$0 1
(define-fun |free_list_n $past$free_list.v:101$5$0| ((state |free_list_s|)) Bool (= ((_ extract 0 0) (|free_list#91| state)) #b1))
; yosys-smt2-wire $past$free_list.v:101$4$0 6
(define-fun |free_list_n $past$free_list.v:101$4$0| ((state |free_list_s|)) (_ BitVec 6) (|free_list#88| state))
; yosys-smt2-wire $past$free_list.v:100$3$0 1
(define-fun |free_list_n $past$free_list.v:100$3$0| ((state |free_list_s|)) Bool (= ((_ extract 0 0) (|free_list#85| state)) #b1))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$/req3#sampled$365 6
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$/req3#sampled$365| ((state |free_list_s|)) (_ BitVec 6) (|free_list#37| state))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$/req2#sampled$383 6
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$/req2#sampled$383| ((state |free_list_s|)) (_ BitVec 6) (|free_list#42| state))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$/req1#sampled$401 6
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$/req1#sampled$401| ((state |free_list_s|)) (_ BitVec 6) (|free_list#47| state))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$/req0#sampled$419 6
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$/req0#sampled$419| ((state |free_list_s|)) (_ BitVec 6) (|free_list#52| state))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$/o_req_count#sampled$345 3
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$/o_req_count#sampled$345| ((state |free_list_s|)) (_ BitVec 3) (|free_list#31| state))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$/o_req3#sampled$363 6
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$/o_req3#sampled$363| ((state |free_list_s|)) (_ BitVec 6) (|free_list#36| state))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$/o_req2#sampled$381 6
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$/o_req2#sampled$381| ((state |free_list_s|)) (_ BitVec 6) (|free_list#41| state))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$/o_req1#sampled$399 6
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$/o_req1#sampled$399| ((state |free_list_s|)) (_ BitVec 6) (|free_list#46| state))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$/o_req0#sampled$447 6
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$/o_req0#sampled$447| ((state |free_list_s|)) (_ BitVec 6) (|free_list#87| state))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$/o_req0#sampled$417 6
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$/o_req0#sampled$417| ((state |free_list_s|)) (_ BitVec 6) (|free_list#51| state))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$/o_avail_count#sampled$327 6
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$/o_avail_count#sampled$327| ((state |free_list_s|)) (_ BitVec 6) (|free_list#56| state))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$/i_rst_n#sampled$497 1
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$/i_rst_n#sampled$497| ((state |free_list_s|)) Bool (= ((_ extract 0 0) (|free_list#78| state)) #b1))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$/i_ret_count#sampled$487 3
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$/i_ret_count#sampled$487| ((state |free_list_s|)) (_ BitVec 3) (|free_list#81| state))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$/i_req_count#sampled$347 3
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$/i_req_count#sampled$347| ((state |free_list_s|)) (_ BitVec 3) (|free_list#32| state))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$/free#sampled$309 48
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$/free#sampled$309| ((state |free_list_s|)) (_ BitVec 48) (|free_list#17| state))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$/f_past_valid#sampled$435 1
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$/f_past_valid#sampled$435| ((state |free_list_s|)) Bool (= ((_ extract 0 0) (|free_list#74| state)) #b1))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$1'1#sampled$437 1
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$1'1#sampled$437| ((state |free_list_s|)) Bool (= ((_ extract 0 0) (|free_list#75| state)) #b1))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:99$2$0#sampled$485 3
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:99$2$0#sampled$485| ((state |free_list_s|)) (_ BitVec 3) (|free_list#80| state))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:95$1$0#sampled$495 1
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:95$1$0#sampled$495| ((state |free_list_s|)) Bool (= ((_ extract 0 0) (|free_list#77| state)) #b1))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:102$6$0#sampled$445 6
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:102$6$0#sampled$445| ((state |free_list_s|)) (_ BitVec 6) (|free_list#92| state))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:101$5$0#sampled$455 1
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:101$5$0#sampled$455| ((state |free_list_s|)) Bool (= ((_ extract 0 0) (|free_list#89| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:101$5$0#sampled$307"], "smtname": 94, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |free_list#94| (|free_list_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:101$5$0#sampled$307
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:101$5$0#sampled$307 1
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:101$5$0#sampled$307| ((state |free_list_s|)) Bool (= ((_ extract 0 0) (|free_list#94| state)) #b1))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:101$4$0#sampled$465 6
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:101$4$0#sampled$465| ((state |free_list_s|)) (_ BitVec 6) (|free_list#86| state))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:100$3$0#sampled$475 1
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:100$3$0#sampled$475| ((state |free_list_s|)) Bool (= ((_ extract 0 0) (|free_list#83| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:91:sample_data$$logic_not$free_list.v:102$65_Y#sampled$293"], "smtname": 95, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |free_list#95| (|free_list_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:91:sample_data$$logic_not$free_list.v:102$65_Y#sampled$293
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$$logic_not$free_list.v:102$65_Y#sampled$293 1
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$$logic_not$free_list.v:102$65_Y#sampled$293| ((state |free_list_s|)) Bool (= ((_ extract 0 0) (|free_list#95| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:91:sample_data$$eq$free_list.v:80$75_Y#sampled$279"], "smtname": 96, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |free_list#96| (|free_list_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:91:sample_data$$eq$free_list.v:80$75_Y#sampled$279
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$$eq$free_list.v:80$75_Y#sampled$279 1
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$$eq$free_list.v:80$75_Y#sampled$279| ((state |free_list_s|)) Bool (= ((_ extract 0 0) (|free_list#96| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:91:sample_data$$eq$free_list.v:79$72_Y#sampled$265"], "smtname": 97, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |free_list#97| (|free_list_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:91:sample_data$$eq$free_list.v:79$72_Y#sampled$265
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$$eq$free_list.v:79$72_Y#sampled$265 1
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$$eq$free_list.v:79$72_Y#sampled$265| ((state |free_list_s|)) Bool (= ((_ extract 0 0) (|free_list#97| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:91:sample_data$$assert$free_list.v:96$54_EN#sampled$259"], "smtname": 98, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |free_list#98| (|free_list_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:91:sample_data$$assert$free_list.v:96$54_EN#sampled$259
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$$assert$free_list.v:96$54_EN#sampled$259 1
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$$assert$free_list.v:96$54_EN#sampled$259| ((state |free_list_s|)) Bool (= ((_ extract 0 0) (|free_list#98| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:91:sample_data$$assert$free_list.v:101$60_EN#sampled$287"], "smtname": 99, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |free_list#99| (|free_list_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:91:sample_data$$assert$free_list.v:101$60_EN#sampled$287
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$$assert$free_list.v:101$60_EN#sampled$287 1
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$$assert$free_list.v:101$60_EN#sampled$287| ((state |free_list_s|)) Bool (= ((_ extract 0 0) (|free_list#99| state)) #b1))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$$0/o_avail_count[5:0]#sampled$329 6
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$$0/o_avail_count[5:0]#sampled$329| ((state |free_list_s|)) (_ BitVec 6) (|free_list#57| state))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$$0/free[47:0]#sampled$311 48
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$$0/free[47:0]#sampled$311| ((state |free_list_s|)) (_ BitVec 48) (|free_list#18| state))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$$0$past$free_list.v:101$5$0[0:0]$49#sampled$457 1
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$$0$past$free_list.v:101$5$0[0:0]$49#sampled$457| ((state |free_list_s|)) Bool (= ((_ extract 0 0) (|free_list#90| state)) #b1))
; yosys-smt2-register $auto$clk2fflogic.cc:91:sample_data$$0$past$free_list.v:100$3$0[0:0]$47#sampled$477 1
(define-fun |free_list_n $auto$clk2fflogic.cc:91:sample_data$$0$past$free_list.v:100$3$0[0:0]$47#sampled$477| ((state |free_list_s|)) Bool (= ((_ extract 0 0) (|free_list#84| state)) #b1))
; yosys-smt2-register $auto$clk2fflogic.cc:77:sample_control_edge$/i_clk#sampled$253 1
(define-fun |free_list_n $auto$clk2fflogic.cc:77:sample_control_edge$/i_clk#sampled$253| ((state |free_list_s|)) Bool (= ((_ extract 0 0) (|free_list#19| state)) #b1))
; yosys-smt2-register $auto$clk2fflogic.cc:65:sample_control$$auto$rtlil.cc:2485:Not$320#sampled$321 1
(define-fun |free_list_n $auto$clk2fflogic.cc:65:sample_control$$auto$rtlil.cc:2485:Not$320#sampled$321| ((state |free_list_s|)) Bool (= ((_ extract 0 0) (|free_list#23| state)) #b1))
(define-fun |free_list#100| ((state |free_list_s|)) Bool (bvule (concat #b000 (|free_list#73| state)) (|free_list#60| state))) ; $le$free_list.v:90$43_Y
; yosys-smt2-assume 0 _witness_.check_assume_free_list_v_90_42 free_list.v:90.9-90.47
(define-fun |free_list_u 0| ((state |free_list_s|)) Bool (or (|free_list#100| state) (not true))) ; _witness_.check_assume_free_list_v_90_42
(define-fun |free_list#101| ((state |free_list_s|)) Bool (bvule (|free_list#73| state) #b100)) ; $le$free_list.v:89$41_Y
; yosys-smt2-assume 1 _witness_.check_assume_free_list_v_89_40 free_list.v:89.9-89.38
(define-fun |free_list_u 1| ((state |free_list_s|)) Bool (or (|free_list#101| state) (not true))) ; _witness_.check_assume_free_list_v_89_40
(define-fun |free_list#102| ((state |free_list_s|)) Bool (bvule (|free_list#0| state) #b100)) ; $le$free_list.v:88$39_Y
; yosys-smt2-assume 2 _witness_.check_assume_free_list_v_88_38 free_list.v:88.9-88.38
(define-fun |free_list_u 2| ((state |free_list_s|)) Bool (or (|free_list#102| state) (not true))) ; _witness_.check_assume_free_list_v_88_38
; yosys-smt2-assume 3 _witness_.check_assume_free_list_v_87_37 free_list.v:87.9-87.26
(define-fun |free_list_u 3| ((state |free_list_s|)) Bool (or (= ((_ extract 0 0) (|free_list#25| state)) #b1) (not true))) ; _witness_.check_assume_free_list_v_87_37
(define-fun |free_list#103| ((state |free_list_s|)) Bool (not (or  (= ((_ extract 0 0) (|free_list#35| state)) #b1) (= ((_ extract 1 1) (|free_list#35| state)) #b1) (= ((_ extract 2 2) (|free_list#35| state)) #b1)))) ; $eq$free_list.v:80$75_Y
(define-fun |free_list#104| ((state |free_list_s|)) Bool (|free_list_is| state)) ; $auto$rtlil.cc:2515:And$250
; yosys-smt2-assume 4 _witness_.check_assume_free_list_v_80_74 free_list.v:80.13-80.42
(define-fun |free_list_u 4| ((state |free_list_s|)) Bool (or (|free_list#103| state) (not (|free_list#104| state)))) ; _witness_.check_assume_free_list_v_80_74
(define-fun |free_list#105| ((state |free_list_s|)) Bool (= (|free_list#26| state) #b111111111111111111111111111111111111111111111111)) ; $eq$free_list.v:79$72_Y
; yosys-smt2-assume 5 _witness_.check_assume_free_list_v_79_71 free_list.v:79.13-79.42
(define-fun |free_list_u 5| ((state |free_list_s|)) Bool (or (|free_list#105| state) (not (|free_list#104| state)))) ; _witness_.check_assume_free_list_v_79_71
(define-fun |free_list#106| ((state |free_list_s|)) (_ BitVec 1) (bvand (|free_list#98| state) (ite (|free_list#21| state) #b1 #b0))) ; $auto$rtlil.cc:2515:And$264
; yosys-smt2-assert 0 _witness_.check_assert_free_list_v_97_56 free_list.v:97.13-97.40
(define-fun |free_list_a 0| ((state |free_list_s|)) Bool (or (= ((_ extract 0 0) (|free_list#97| state)) #b1) (not (= ((_ extract 0 0) (|free_list#106| state)) #b1)))) ; _witness_.check_assert_free_list_v_97_56
; yosys-smt2-assert 1 _witness_.check_assert_free_list_v_96_54 free_list.v:96.13-96.40
(define-fun |free_list_a 1| ((state |free_list_s|)) Bool (or (= ((_ extract 0 0) (|free_list#96| state)) #b1) (not (= ((_ extract 0 0) (|free_list#106| state)) #b1)))) ; _witness_.check_assert_free_list_v_96_54
(define-fun |free_list#107| ((state |free_list_s|)) (_ BitVec 1) (bvand (|free_list#99| state) (ite (|free_list#21| state) #b1 #b0))) ; $auto$rtlil.cc:2515:And$292
; yosys-smt2-assert 2 _witness_.check_assert_free_list_v_102_61 free_list.v:102.21-102.49
(define-fun |free_list_a 2| ((state |free_list_s|)) Bool (or (= ((_ extract 0 0) (|free_list#95| state)) #b1) (not (= ((_ extract 0 0) (|free_list#107| state)) #b1)))) ; _witness_.check_assert_free_list_v_102_61
; yosys-smt2-assert 3 _witness_.check_assert_free_list_v_101_60 free_list.v:101.21-101.55
(define-fun |free_list_a 3| ((state |free_list_s|)) Bool (or (= ((_ extract 0 0) (|free_list#94| state)) #b1) (not (= ((_ extract 0 0) (|free_list#107| state)) #b1)))) ; _witness_.check_assert_free_list_v_101_60
(define-fun |free_list#108| ((state |free_list_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|free_list#85| state)) #b1) #b1 #b0)) ; $procmux$207_Y
(define-fun |free_list#109| ((state |free_list_s|)) Bool (not (or  (= ((_ extract 0 0) (|free_list#82| state)) #b1) (= ((_ extract 1 1) (|free_list#82| state)) #b1) (= ((_ extract 2 2) (|free_list#82| state)) #b1)))) ; $eq$free_list.v:99$58_Y
(define-fun |free_list#110| ((state |free_list_s|)) Bool (and (or  (= ((_ extract 0 0) (|free_list#76| state)) #b1) false) (or  (|free_list#109| state) false))) ; $logic_and$free_list.v:99$59_Y
(define-fun |free_list#111| ((state |free_list_s|)) (_ BitVec 1) (ite (|free_list#110| state) (|free_list#108| state) #b0)) ; $procmux$209_Y
(define-fun |free_list#112| ((state |free_list_s|)) Bool (not (or  (= ((_ extract 0 0) (|free_list#25| state)) #b1) false))) ; $logic_not$free_list.v:95$51_Y
(define-fun |free_list#113| ((state |free_list_s|)) Bool (not (or  (= ((_ extract 0 0) (|free_list#79| state)) #b1) false))) ; $logic_not$free_list.v:95$52_Y
(define-fun |free_list#114| ((state |free_list_s|)) Bool (or  (|free_list#112| state) false  (|free_list#113| state) false)) ; $logic_or$free_list.v:95$53_Y
(define-fun |free_list#115| ((state |free_list_s|)) (_ BitVec 1) (ite (|free_list#114| state) #b0 (|free_list#111| state))) ; $assert$free_list.v:101$60_EN
(define-fun |free_list#116| ((state |free_list_s|)) (_ BitVec 1) (ite (|free_list#114| state) #b1 #b0)) ; $assert$free_list.v:96$54_EN
(define-fun |free_list#117| ((state |free_list_s|)) (_ BitVec 7) (bvsub #b0101111 (concat #b0 (|free_list#93| state)))) ; { $auto$rtlil.cc:2530:Sub$63 [31] $auto$rtlil.cc:2530:Sub$63 [5:0] }
(define-fun |free_list#118| ((state |free_list_s|)) (_ BitVec 1) ((_ extract 0 0) (ite (bvsge (|free_list#117| state) #b0000000) (bvlshr (|free_list#26| state) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (|free_list#117| state))))))))))))))))))))))))))))))))))))))))))) (bvshl (|free_list#26| state) (bvneg (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (concat ((_ extract 6 6) (|free_list#117| state)) (|free_list#117| state))))))))))))))))))))))))))))))))))))))))))))))) ; $shiftx$free_list.v:0$64_Y
(define-fun |free_list#119| ((state |free_list_s|)) Bool (not (or  (= ((_ extract 0 0) (|free_list#118| state)) #b1) false))) ; $logic_not$free_list.v:102$65_Y
(define-fun |free_list#120| ((state |free_list_s|)) (_ BitVec 7) (bvsub #b0101111 (concat #b0 (|free_list#88| state)))) ; { $auto$rtlil.cc:2530:Sub$68 [31] $auto$rtlil.cc:2530:Sub$68 [5:0] }
(define-fun |free_list#121| ((state |free_list_s|)) (_ BitVec 1) ((_ extract 0 0) (ite (bvsge (|free_list#120| state) #b0000000) (bvlshr (|free_list#26| state) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (|free_list#120| state))))))))))))))))))))))))))))))))))))))))))) (bvshl (|free_list#26| state) (bvneg (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (concat ((_ extract 6 6) (|free_list#120| state)) (|free_list#120| state))))))))))))))))))))))))))))))))))))))))))))))) ; $0$past$free_list.v:101$5$0[0:0]$49
(define-fun |free_list#122| ((state |free_list_s|)) Bool (bvugt (|free_list#73| state) #b000)) ; $0$past$free_list.v:100$3$0[0:0]$47
(define-fun |free_list#123| ((state |free_list_s|)) (_ BitVec 6) (bvadd (|free_list#60| state) (concat #b000 (|free_list#0| state)))) ; $add$free_list.v:59$33_Y
(define-fun |free_list#124| ((state |free_list_s|)) (_ BitVec 6) (bvsub (|free_list#123| state) (concat #b000 (|free_list#73| state)))) ; $0\o_avail_count[5:0]
(define-fun |free_list#125| ((state |free_list_s|)) (_ BitVec 1) (bvnot (|free_list#25| state))) ; $auto$rtlil.cc:2485:Not$320
(define-fun |free_list#126| ((state |free_list_s|)) Bool (= (|free_list#73| state) #b100)) ; $procmux$228_CMP
(define-fun |free_list#127| ((state |free_list_s|)) Bool (= (|free_list#73| state) #b011)) ; $procmux$229_CMP
(define-fun |free_list#128| ((state |free_list_s|)) Bool (= (|free_list#73| state) #b010)) ; $procmux$230_CMP
(define-fun |free_list#129| ((state |free_list_s|)) Bool (= (|free_list#73| state) #b001)) ; $procmux$231_CMP
(define-fun |free_list#130| ((state |free_list_s|)) Bool (not (or  (= ((_ extract 0 0) (|free_list#73| state)) #b1) (= ((_ extract 1 1) (|free_list#73| state)) #b1) (= ((_ extract 2 2) (|free_list#73| state)) #b1)))) ; $procmux$232_CMP
(define-fun |free_list#131| ((state |free_list_s|)) (_ BitVec 48) (ite (|free_list#130| state) (|free_list#30| state) (ite (|free_list#129| state) (|free_list#62| state) (ite (|free_list#128| state) (|free_list#64| state) (ite (|free_list#127| state) (|free_list#66| state) (ite (|free_list#126| state) (|free_list#68| state) (|free_list#26| state))))))) ; $0\free[47:0]
(define-fun |free_list_a| ((state |free_list_s|)) Bool (and
  (|free_list_a 0| state)
  (|free_list_a 1| state)
  (|free_list_a 2| state)
  (|free_list_a 3| state)
  (|encoder_6bit_a| (|free_list_h enc0| state))
  (|encoder_6bit_a| (|free_list_h enc1| state))
  (|encoder_6bit_a| (|free_list_h enc2| state))
  (|encoder_6bit_a| (|free_list_h enc3| state))
))
(define-fun |free_list_u| ((state |free_list_s|)) Bool (and
  (|free_list_u 0| state)
  (|free_list_u 1| state)
  (|free_list_u 2| state)
  (|free_list_u 3| state)
  (|free_list_u 4| state)
  (|free_list_u 5| state)
  (|encoder_6bit_u| (|free_list_h enc0| state))
  (|encoder_6bit_u| (|free_list_h enc1| state))
  (|encoder_6bit_u| (|free_list_h enc2| state))
  (|encoder_6bit_u| (|free_list_h enc3| state))
))
(define-fun |free_list_i| ((state |free_list_s|)) Bool (and
  (= (|free_list#37| state) #b000000) ; $auto$clk2fflogic.cc:91:sample_data$/req3#sampled$365
  (= (|free_list#42| state) #b000000) ; $auto$clk2fflogic.cc:91:sample_data$/req2#sampled$383
  (= (|free_list#47| state) #b000000) ; $auto$clk2fflogic.cc:91:sample_data$/req1#sampled$401
  (= (|free_list#52| state) #b000000) ; $auto$clk2fflogic.cc:91:sample_data$/req0#sampled$419
  (= (|free_list#87| state) #b000000) ; $auto$clk2fflogic.cc:91:sample_data$/o_req0#sampled$447
  (= (= ((_ extract 0 0) (|free_list#78| state)) #b1) false) ; $auto$clk2fflogic.cc:91:sample_data$/i_rst_n#sampled$497
  (= (|free_list#81| state) #b000) ; $auto$clk2fflogic.cc:91:sample_data$/i_ret_count#sampled$487
  (= (|free_list#32| state) #b000) ; $auto$clk2fflogic.cc:91:sample_data$/i_req_count#sampled$347
  (= (= ((_ extract 0 0) (|free_list#74| state)) #b1) false) ; $auto$clk2fflogic.cc:91:sample_data$/f_past_valid#sampled$435
  (= (= ((_ extract 0 0) (|free_list#75| state)) #b1) false) ; $auto$clk2fflogic.cc:91:sample_data$1'1#sampled$437
  (= (= ((_ extract 0 0) (|free_list#94| state)) #b1) true) ; $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:101$5$0#sampled$307
  (= (= ((_ extract 0 0) (|free_list#95| state)) #b1) true) ; $auto$clk2fflogic.cc:91:sample_data$$logic_not$free_list.v:102$65_Y#sampled$293
  (= (= ((_ extract 0 0) (|free_list#96| state)) #b1) true) ; $auto$clk2fflogic.cc:91:sample_data$$eq$free_list.v:80$75_Y#sampled$279
  (= (= ((_ extract 0 0) (|free_list#97| state)) #b1) true) ; $auto$clk2fflogic.cc:91:sample_data$$eq$free_list.v:79$72_Y#sampled$265
  (= (= ((_ extract 0 0) (|free_list#98| state)) #b1) false) ; $auto$clk2fflogic.cc:91:sample_data$$assert$free_list.v:96$54_EN#sampled$259
  (= (= ((_ extract 0 0) (|free_list#99| state)) #b1) false) ; $auto$clk2fflogic.cc:91:sample_data$$assert$free_list.v:101$60_EN#sampled$287
  (= (|free_list#57| state) #b000000) ; $auto$clk2fflogic.cc:91:sample_data$$0/o_avail_count[5:0]#sampled$329
  (= (|free_list#18| state) #b000000000000000000000000000000000000000000000000) ; $auto$clk2fflogic.cc:91:sample_data$$0/free[47:0]#sampled$311
  (= (= ((_ extract 0 0) (|free_list#90| state)) #b1) false) ; $auto$clk2fflogic.cc:91:sample_data$$0$past$free_list.v:101$5$0[0:0]$49#sampled$457
  (= (= ((_ extract 0 0) (|free_list#84| state)) #b1) false) ; $auto$clk2fflogic.cc:91:sample_data$$0$past$free_list.v:100$3$0[0:0]$47#sampled$477
  (= (= ((_ extract 0 0) (|free_list#19| state)) #b1) true) ; $auto$clk2fflogic.cc:77:sample_control_edge$/i_clk#sampled$253
  (= (= ((_ extract 0 0) (|free_list#23| state)) #b1) false) ; $auto$clk2fflogic.cc:65:sample_control$$auto$rtlil.cc:2485:Not$320#sampled$321
  (|encoder_6bit_i| (|free_list_h enc0| state))
  (|encoder_6bit_i| (|free_list_h enc1| state))
  (|encoder_6bit_i| (|free_list_h enc2| state))
  (|encoder_6bit_i| (|free_list_h enc3| state))
))
(define-fun |free_list_h| ((state |free_list_s|)) Bool (and
  (= (|free_list_is| state) (|encoder_6bit_is| (|free_list_h enc0| state)))
  (= (|free_list#8| state) (|encoder_6bit_n o_code| (|free_list_h enc0| state))) ; encoder_6bit.o_code
  (= (concat #b0000000000000000 (|free_list#72| state)) (|encoder_6bit_n i_vec| (|free_list_h enc0| state))) ; encoder_6bit.i_vec
  (= (|free_list_is| state) (|encoder_6bit_is| (|free_list_h enc1| state)))
  (= (|free_list#7| state) (|encoder_6bit_n o_code| (|free_list_h enc1| state))) ; encoder_6bit.o_code
  (= (concat #b0000000000000000 (|free_list#71| state)) (|encoder_6bit_n i_vec| (|free_list_h enc1| state))) ; encoder_6bit.i_vec
  (= (|free_list_is| state) (|encoder_6bit_is| (|free_list_h enc2| state)))
  (= (|free_list#6| state) (|encoder_6bit_n o_code| (|free_list_h enc2| state))) ; encoder_6bit.o_code
  (= (concat #b0000000000000000 (|free_list#70| state)) (|encoder_6bit_n i_vec| (|free_list_h enc2| state))) ; encoder_6bit.i_vec
  (= (|free_list_is| state) (|encoder_6bit_is| (|free_list_h enc3| state)))
  (= (|free_list#5| state) (|encoder_6bit_n o_code| (|free_list_h enc3| state))) ; encoder_6bit.o_code
  (= (concat #b0000000000000000 (|free_list#69| state)) (|encoder_6bit_n i_vec| (|free_list_h enc3| state))) ; encoder_6bit.i_vec
  (|encoder_6bit_h| (|free_list_h enc0| state))
  (|encoder_6bit_h| (|free_list_h enc1| state))
  (|encoder_6bit_h| (|free_list_h enc2| state))
  (|encoder_6bit_h| (|free_list_h enc3| state))
))
(define-fun |free_list_t| ((state |free_list_s|) (next_state |free_list_s|)) Bool (and
  (= (|free_list#115| state) (|free_list#99| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$288 $auto$clk2fflogic.cc:91:sample_data$$assert$free_list.v:101$60_EN#sampled$287
  (= (|free_list#116| state) (|free_list#98| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$260 $auto$clk2fflogic.cc:91:sample_data$$assert$free_list.v:96$54_EN#sampled$259
  (= (ite (|free_list#105| state) #b1 #b0) (|free_list#97| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$266 $auto$clk2fflogic.cc:91:sample_data$$eq$free_list.v:79$72_Y#sampled$265
  (= (ite (|free_list#103| state) #b1 #b0) (|free_list#96| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$280 $auto$clk2fflogic.cc:91:sample_data$$eq$free_list.v:80$75_Y#sampled$279
  (= (ite (|free_list#119| state) #b1 #b0) (|free_list#95| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$294 $auto$clk2fflogic.cc:91:sample_data$$logic_not$free_list.v:102$65_Y#sampled$293
  (= (|free_list#91| state) (|free_list#94| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$308 $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:101$5$0#sampled$307
  (= (|free_list#93| state) (|free_list#92| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$446 $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:102$6$0#sampled$445
  (= (|free_list#121| state) (|free_list#90| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$458 $auto$clk2fflogic.cc:91:sample_data$$0$past$free_list.v:101$5$0[0:0]$49#sampled$457
  (= (|free_list#91| state) (|free_list#89| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$456 $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:101$5$0#sampled$455
  (= (|free_list#55| state) (|free_list#87| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$448 $auto$clk2fflogic.cc:91:sample_data$\o_req0#sampled$447
  (= (|free_list#88| state) (|free_list#86| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$466 $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:101$4$0#sampled$465
  (= (ite (|free_list#122| state) #b1 #b0) (|free_list#84| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$478 $auto$clk2fflogic.cc:91:sample_data$$0$past$free_list.v:100$3$0[0:0]$47#sampled$477
  (= (|free_list#85| state) (|free_list#83| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$476 $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:100$3$0#sampled$475
  (= (|free_list#0| state) (|free_list#81| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$488 $auto$clk2fflogic.cc:91:sample_data$\i_ret_count#sampled$487
  (= (|free_list#82| state) (|free_list#80| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$486 $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:99$2$0#sampled$485
  (= (|free_list#25| state) (|free_list#78| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$498 $auto$clk2fflogic.cc:91:sample_data$\i_rst_n#sampled$497
  (= (|free_list#79| state) (|free_list#77| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$496 $auto$clk2fflogic.cc:91:sample_data$$past$free_list.v:95$1$0#sampled$495
  (= #b1 (|free_list#75| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$438 $auto$clk2fflogic.cc:91:sample_data$1'1#sampled$437
  (= (|free_list#76| state) (|free_list#74| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$436 $auto$clk2fflogic.cc:91:sample_data$\f_past_valid#sampled$435
  (= (|free_list#124| state) (|free_list#57| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$330 $auto$clk2fflogic.cc:91:sample_data$$0\o_avail_count[5:0]#sampled$329
  (= (|free_list#60| state) (|free_list#56| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$328 $auto$clk2fflogic.cc:91:sample_data$\o_avail_count#sampled$327
  (= (|free_list#8| state) (|free_list#52| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$420 $auto$clk2fflogic.cc:91:sample_data$\req0#sampled$419
  (= (|free_list#55| state) (|free_list#51| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$418 $auto$clk2fflogic.cc:91:sample_data$\o_req0#sampled$417
  (= (|free_list#7| state) (|free_list#47| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$402 $auto$clk2fflogic.cc:91:sample_data$\req1#sampled$401
  (= (|free_list#50| state) (|free_list#46| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$400 $auto$clk2fflogic.cc:91:sample_data$\o_req1#sampled$399
  (= (|free_list#6| state) (|free_list#42| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$384 $auto$clk2fflogic.cc:91:sample_data$\req2#sampled$383
  (= (|free_list#45| state) (|free_list#41| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$382 $auto$clk2fflogic.cc:91:sample_data$\o_req2#sampled$381
  (= (|free_list#5| state) (|free_list#37| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$366 $auto$clk2fflogic.cc:91:sample_data$\req3#sampled$365
  (= (|free_list#40| state) (|free_list#36| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$364 $auto$clk2fflogic.cc:91:sample_data$\o_req3#sampled$363
  (= (|free_list#73| state) (|free_list#32| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$348 $auto$clk2fflogic.cc:91:sample_data$\i_req_count#sampled$347
  (= (|free_list#35| state) (|free_list#31| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$346 $auto$clk2fflogic.cc:91:sample_data$\o_req_count#sampled$345
  (= (|free_list#125| state) (|free_list#23| next_state)) ; $auto$clk2fflogic.cc:70:sample_control$322 $auto$clk2fflogic.cc:65:sample_control$$auto$rtlil.cc:2485:Not$320#sampled$321
  (= (|free_list#20| state) (|free_list#19| next_state)) ; $auto$clk2fflogic.cc:82:sample_control_edge$254 $auto$clk2fflogic.cc:77:sample_control_edge$\i_clk#sampled$253
  (= (|free_list#131| state) (|free_list#18| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$312 $auto$clk2fflogic.cc:91:sample_data$$0\free[47:0]#sampled$311
  (= (|free_list#26| state) (|free_list#17| next_state)) ; $auto$clk2fflogic.cc:98:sample_data$310 $auto$clk2fflogic.cc:91:sample_data$\free#sampled$309
  (|encoder_6bit_t| (|free_list_h enc0| state) (|free_list_h enc0| next_state))
  (|encoder_6bit_t| (|free_list_h enc1| state) (|free_list_h enc1| next_state))
  (|encoder_6bit_t| (|free_list_h enc2| state) (|free_list_h enc2| next_state))
  (|encoder_6bit_t| (|free_list_h enc3| state) (|free_list_h enc3| next_state))
)) ; end of module free_list
; yosys-smt2-topmod free_list
; end of yosys output
